# key variables that are likely to change with the control file
runorient = right			# control the orientation of analysis; just left or right for now
qnotkmode = t				# control run so don't repeat creation of qfilters
bigoutput = f				# don't output big kcount and kandq files if we don't need them
limitseqs = 50				# just limit the number of seqs to look at for testing
qminprint = 1				# don’t print qmers less than this to kcount file for the query and related kmer sets


# set up directory structure and sequence input file information
seqdir = sequences/
qfiletype = fastq			# file type for the query sequences: 		fastq sequence file
seqext = fq				# sequence extension to identify sequence files

refdir = references/
filterdir = qfilters/
outputdir = ACmulti_output/
kandqdir = kandq/
qnotkdir = qnotk/
kcountdir = kcounts/
pcountdir = pcounts/


# reference files and information

seqfile = WuhanHu1 			# the genome reference file:			WuhanHu1 is a fastA sequence file
filetype = fasta 			# file type for the reference sequence: 	fasta sequence file
kinfile = WuhanHu1_kpos.xls 		# wuhan kcounts and position reference file; this needs to match klen=14 at the moment
seqnamefilter =  filterseqs_2020-10-14_CO.xls	# not used but need to be there: Colorado sequence names from 10-14-2020
left = left				# read in left prefix for orientation
right = right				# read in right prefix for orientation
klen = 14				# kmer length


# output file flags

prefilter = qfilter_			# prefix for qfilter files
primeroutend = _primers.txt		# appendage for primer range output file
kcountfile = kcounts			# simple kmer counts output flag for reference sequences
qnotk = qnotk				# tag for qnotk output (in the seqfile but not in the reference file)
kandq = kandq				# tag for qandk output (in both the seqfile and the reference file)
kpositionsfile = kpos.xls		# name and start positions recorded for kmer locations, reference sequence
kminprint = 1				# don’t print kmers less than this to kcount file, for the reference kmers
printNs = false				# print Ns in sequences? We normally don't want to
qfilterheader = true			# print header on qfilter files


# query filter boundaries
minseq = 247				# Illumina length minimum for 250 bp runs
minmatch = 50				# the number of kmer matches in a read (matchcount) cannot be less than this
maxmisses = 42				# the number of misses is possible - matchcount + 1
# the firstmatch and lastmatch are the order of reference kmers found in the query sequence
# first and second are whichever of these are first and second in order in the Wuhan reference sequence
Wudiffmax = 254				# the difference between the second and first + klen cannot be more than this
maxfirsthit = 2				# the read position of the Wuhan first kmer cannot be greater than this
minlasthit = 219			# the read position of the Wuhan first kmer cannot be greater than this
# posdiff is the lastposition - sequence length + klen -1
minposdiff = -16			# posdiff can't be less than this
# if left, the first kmer match must be a primer start
# if right, the second kmer match + klen must be a primer end boundary


# review if need these
dorevcomp = T				# do all sums and comparisons including reverse compliments of kmers; needed to use QueryNotRef()
doquery = f				# doquery can control the use of a seqnamefilter 
doqueryq = t				# doqueryq can control the use of a seqnamefilter


# some boundaries just in case, or ole parameters maintained for compatibility
kmaxprint = 100000			# don’t print kmers with counts more than this
dofilter = false			# utilize seqnamefilter; t, T, true, True, TRUE accepted
minseqlen = 0				# sequences must be greater than minseqlen
recordseq = 0				# will memorize the input sequence (set 0 for big genomes)
minline = 0				# line minimum
linelimit = 500000			# line limit
chrommapfile = chrommap.xls		# name and start positions recorded for each sequence segment


# some non-specific values that may not even be used in AnCovMulti
loudness = 2				# control detail of program output, default is murmur (2)
record_loudness = 4			# loudness for record file, default is talk (2)
runmode = 1				# runmode of program 1 = basic, 2 = 
printmode = 1				# to print or not to print, that is the question
maxlines = 8000000			# just so we don’t get carried away without meaning to
seed = 248597				# seed for random number generator, if needed